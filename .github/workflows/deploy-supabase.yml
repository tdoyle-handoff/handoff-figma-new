name: Deploy Supabase Functions

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Target environment name (optional)"
        required: false
        default: "production"
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js (for any build/prep steps if needed)
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Supabase version
        run: supabase --version

      - name: Authenticate Supabase CLI
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        run: |
          if [ -z "$SUPABASE_ACCESS_TOKEN" ]; then
            echo "SUPABASE_ACCESS_TOKEN is not set. Add it in GitHub Repo Settings > Secrets and variables > Actions." >&2
            exit 1
          fi
          supabase login --token "$SUPABASE_ACCESS_TOKEN"

      - name: Deploy Edge Functions (server)
        env:
          SUPABASE_PROJECT_REF: ${{ secrets.SUPABASE_PROJECT_REF }}
        run: |
          if [ -z "$SUPABASE_PROJECT_REF" ]; then
            echo "SUPABASE_PROJECT_REF is not set. Add it in GitHub Repo Settings > Secrets and variables > Actions." >&2
            exit 1
          fi
          # Deploy the functions inside supabase/functions/server
          # If you have multiple functions, you can deploy each or use `supabase functions deploy --project-ref ... --all`
          supabase functions deploy server --project-ref "$SUPABASE_PROJECT_REF"

      - name: Post-deploy summary
        run: |
          echo "Deployment complete. Verify on Supabase Dashboard."

